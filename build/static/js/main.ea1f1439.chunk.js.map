{"version":3,"sources":["components/navigation.jsx","components/header.jsx","components/about.jsx","components/services.jsx","components/contact.jsx","App.jsx","serviceWorker.js","index.js"],"names":["Navigation","props","id","className","type","data-toggle","data-target","href","Header","data","title","paragraph","About","src","alt","Why","map","d","i","Why2","Services","icon","aria-hidden","name","text","Contact","useState","botonSubmitText","setBotonSubmitText","botonSubmitColor","setBotonSubmitColor","botonSubmitGradientColor","lastname","email","cellphone","company","position","requirement","channel","message","setData","onChangeInput","e","preventDefault","target","value","validate","onSubmit","console","log","emailjs","sendForm","then","result","error","placeholder","required","onChange","pattern","rows","style","background","backgroundImage","address","phone","carrers","linkedin","instagram","class","App","SmoothScroll","speed","speedAsDuration","landingPageData","setLandingPageData","useEffect","JsonData","ReactGa","initialize","pageview","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.ea1f1439.chunk.js","sourcesContent":["export const Navigation = (props) => {\r\n  return (\r\n    <nav id='menu' className='navbar navbar-default navbar-fixed-top'>\r\n      <div className='container'>\r\n        <div className='navbar-header'>\r\n          <button\r\n            type='button'\r\n            className='navbar-toggle collapsed'\r\n            data-toggle='collapse'\r\n            data-target='#bs-example-navbar-collapse-1'\r\n          >\r\n            \r\n            {' '}\r\n            <span className='sr-only'>Toggle navigation</span>{' '}\r\n            <span className='icon-bar'></span>{' '}\r\n            <span className='icon-bar'></span>{' '}\r\n            <span className='icon-bar'></span>{' '}\r\n          </button>\r\n          <a className='navbar-brand page-scroll' href='#page-top'>\r\n            BloY  Data & Analytics | Creating what you imagine\r\n          </a>{' '}\r\n        </div>\r\n\r\n        <div\r\n          className='collapse navbar-collapse'\r\n          id='bs-example-navbar-collapse-1'\r\n        >\r\n          <ul className='nav navbar-nav navbar-right'>\r\n            <li>\r\n              <a href='#page-top' className='page-scroll'>\r\n                Home\r\n              </a>\r\n            </li>\r\n            <li>\r\n              <a href='#about' className='page-scroll'>\r\n                About Us\r\n              </a>\r\n            </li>\r\n            <li>\r\n              <a href='#services' className='page-scroll'>\r\n                Services\r\n              </a>\r\n            </li>\r\n            {/* <li>\r\n              <a href='#testimonials' className='page-scroll'>\r\n                Clients\r\n              </a>\r\n            </li> */}\r\n            {/* <li>\r\n              <a href='#team' className='page-scroll'>\r\n                Team\r\n              </a>\r\n            </li> */}\r\n            <li>\r\n              <a href='#contact' className='page-scroll'>\r\n                Contact Us\r\n              </a>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\n","\nexport const Header = (props) => {\n  return (\n  \n    <header id='header'>\n      \n      <div className='intro'>\n      \n        <div className='overlay'>\n          <div className='container'>\n            <div className='row'>\n              <div className='col-md-8 col-md-offset-2 intro-text'>\n                <h1>\n                  {props.data ? props.data.title : 'Loading'}\n                  <span></span>\n                </h1>\n                <p>{props.data ? props.data.paragraph : 'Loading'}</p>\n                <a\n                  href='#about'\n                  className='btn btn-custom btn-lg page-scroll'\n                >\n                  Learn More\n                </a>{' '}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </header>\n\n  )\n}\n","export const About = (props) => {\n  return (\n    <div id='about'>\n      <div className='container'>\n        <div className='row'>\n          <div className='col-xs-12 col-md-6'>\n            {' '}\n            <img src='img/about.jpg' className='img-responsive' alt='' />{' '}\n            \n          </div>\n          <div className='col-xs-12 col-md-6'>\n            <div className='about-text'>\n              <h2>About Us</h2>\n              <p>{props.data ? props.data.paragraph : 'loading...'}</p>\n              <h3>Why Choose Us?</h3>\n              <div className='list-style'>\n                <div className='col-lg-6 col-sm-6 col-xs-12'>\n                  <ul>\n                    {props.data\n                      ? props.data.Why.map((d, i) => (\n                          <li key={`${d}-${i}`}>{d}</li>\n                        ))\n                      : 'loading'}\n                  </ul>\n                </div>\n                <div className='col-lg-6 col-sm-6 col-xs-12'>\n                  <ul>\n                    {props.data\n                      ? props.data.Why2.map((d, i) => (\n                          <li key={`${d}-${i}`}> {d}</li>\n                        ))\n                      : 'loading'}\n                  </ul>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n","export const Services = (props) => {\n  return (\n    <div id='services' className='text-center'>\n      <div className='container'>\n        <div className='section-title'>\n          <h2>Our Services</h2>\n          <p>\n          We use the power of Big Data Analytics to enable the digital transformation of your organization.\n          </p>\n        </div>\n        <div className='row'>\n          {props.data\n            ? props.data.map((d, i) => (\n                <div key={`${d.name}-${i}`} className='col-md-6'>\n                  {' '}\n                  <i className={d.icon} aria-hidden=\"true\"></i>\n                  <div className='service-desc'>\n                    <h3>{d.name}</h3>\n                    <p>{d.text}</p>\n                  </div>\n                </div>\n              ))\n            : 'loading'}\n        </div>\n      </div>\n    </div>\n  )\n}\n","import { useState } from 'react'\nimport emailjs from 'emailjs-com'\n\n\nexport const Contact = (props) => {\n\n  const initialState = {\n    name: '', \n    lastname: '',\n    email: '', \n    cellphone: '',\n    company: '',\n    position: '',\n    requirement: '', \n    channel: '',\n    message: ''\n  }\n\n  const [botonSubmitText, setBotonSubmitText] = useState('Send');\n\n  const [botonSubmitColor, setBotonSubmitColor] = useState('#5ca9fb');\n\n  const [botonSubmitGradientColor, setBotonSubmitGradientColor] = useState('linear-gradient(to right, #5ca9fb 0%, #6372ff 100%)');\n\n  const [data, setData] = useState({\n    name: '',\n    lastname : '',\n    email : '',\n    cellphone : '',\n    company : '',\n    position : '',\n    requirement : '',\n    channel: '',\n    message: ''\n  });\n\n  //Edita el state de data\n  const onChangeInput = e => {\n    e.preventDefault();\n    setData({\n      ...data,\n      [e.target.name]: e.target.value\n    })\n  }\n\n  const {name, lastname, email, cellphone, company, position, requirement, channel, message} = data\n\n  const handleChange = (e) => {\n    const { name, value } = e.target\n  }\n\n  const clearState = () => {\n    setData({\n    name: '',\n    lastname : '',\n    email : '',\n    cellphone : '',\n    company : '',\n    position : '',\n    requirement : '',\n    channel: '',\n    message: ''})\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    console.log(name, lastname, email, cellphone, company, position, requirement, channel, message)\n    emailjs\n      .sendForm(\n        'hostinger', 'hostinger_template', e.target, 'user_zdWYM85ci04bpRK6IFnrF'\n      )\n      .then(\n        (result) => {\n          console.log(result.text)\n          clearState()\n          setBotonSubmitText('Sent')\n          setBotonSubmitColor('#00FA9A')\n        },\n        (error) => {\n          console.log(error.text)\n        }\n      )\n  }\n \n  return (\n    <div>\n      <div id='contact'>\n        <div className='container'>\n          <div className='col-md-8'>\n            <div className='row'>\n              <div className='section-title'>\n                <h2>Get In Touch</h2>\n                <p>\n                  Your information and context will help us to clarify what your need is.\n                  If you are interested in any of our services, or want more information about how we could help you, please contact us.\n                </p>\n              </div>\n              <form name='sentMessage' validate onSubmit={handleSubmit}>\n                <div className='row'>\n                  <div className='col-md-6'>\n                    <div className='form-group'>\n                      <input\n                        type='text'\n                        id='name'\n                        name='name'\n                        value = {data.name}\n                        className='form-control'\n                        placeholder='Name *'\n                        required\n                        onChange={(e) => onChangeInput(e)}\n                      />\n                      <p className='help-block text-danger'></p>\n                    </div>\n                  </div>\n\n                  <div className='col-md-6'>\n                    <div className='form-group'>\n                      <input\n                        type='text'\n                        id='lastname'\n                        name='lastname'\n                        value = {data.lastname}\n                        className='form-control'\n                        placeholder='Last Name *'\n                        required\n                        onChange={(e) => onChangeInput(e)}\n                      />\n                      <p className='help-block text-danger'></p>\n                    </div>\n                  </div>\n\n                  <div className='col-md-6'>\n                    <div className='form-group'>\n                      <input\n                        type='email'\n                        id='email'\n                        name='email'\n                        value = {data.email}\n                        className='form-control'\n                        placeholder='Email Address *'\n                        required\n                        onChange={(e) => onChangeInput(e)}\n                      />\n                      <p className='help-block text-danger'></p>\n                    </div>\n                  </div>\n\n                  <div className='col-md-6'>\n                    <div className='form-group'>\n                      <input\n                        type='text'\n                        id='cellphone'\n                        name='cellphone'\n                        value = {data.cellphone}\n                        className='form-control'\n                        placeholder='Cellphone *'\n                        required\n                        pattern = \"[0-9+-]{10,}\"\n                        onChange={(e) => onChangeInput(e)}\n                      />\n                      <p className='help-block text-danger'></p>\n                    </div>\n                  </div>\n\n                  <div className='col-md-6'>\n                    <div className='form-group'>\n                      <input\n                        type='text'\n                        id='company'\n                        name='company'\n                        value = {data.company}\n                        className='form-control'\n                        placeholder='Company *'\n                        required\n                        onChange={(e) => onChangeInput(e)}\n                      />\n                      <p className='help-block text-danger'></p>\n                    </div>\n                  </div>\n\n                  <div className='col-md-6'>\n                    <div className='form-group'>\n                      <input\n                        type='text'\n                        id='position'\n                        name='position'\n                        value = {data.position}\n                        className='form-control'\n                        placeholder='Position *'\n                        required\n                        onChange={(e) => onChangeInput(e)}\n                      />\n                      <p className='help-block text-danger'></p>\n                    </div>\n                  </div>\n\n                  <div className='col-md-6'>\n                    <div className='form-group'>\n                      <select\n                      id='requirement'\n                      name='requirement'\n                      className='form-control'\n                      required\n                      value = {data.requirement}\n                      onChange={(e) => onChangeInput(e)}>\n                      <option> Requirement *</option>\n                      <option value=\"advancedAnalytics\">Advanced Analytics</option>\n                      <option value=\"digitalTransformation\">Digital Transformation</option>\n                      <option value=\"projectManagement\">Project Management</option>\n                      <option value=\"sapConsulting\">SAP Consulting</option>\n                      <option value=\"staffAugmentation\">Staff Augmentation</option>\n                      </select>\n                      <p className='help-block text-danger'></p>\n                    </div>\n                  </div>\n\n                  <div className='col-md-6'>\n                    <div className='form-group'>\n                      <select\n                      id='channel'\n                      name='channel'\n                      className='form-control'\n                      value = {data.channel}\n                      required\n                      onChange={(e) => onChangeInput(e)}>\n                      <option> How did you know us? *</option>\n                      <option value=\"directSearch\"> Direct Search </option>\n                      <option value=\"google\"> Google </option>\n                      <option value=\"linkedIn\">LinkedIn</option>\n                      <option value=\"referral\">Referral</option>\n                      <option value=\"other\">Other</option>\n                      </select>\n                      \n                      <p className='help-block text-danger'></p>\n                    </div>\n                  </div>\n\n\n                </div>\n                <div className='form-group'>\n                  <textarea\n                    name='message'\n                    id='message'\n                    className='form-control'\n                    value = {data.message}\n                    rows='4'\n                    placeholder='Message'\n                    required\n                    onChange={(e) => onChangeInput(e)}\n\n                  ></textarea>\n                  <p className='help-block text-danger'></p>\n                </div>\n                <div id='success'></div>\n                <button type='submit' className='btn btn-custom btn-lg' style = {{background: botonSubmitColor, backgroundImage: botonSubmitGradientColor }}>\n                  {botonSubmitText}\n                </button>\n              </form>\n            </div>\n          </div>\n          \n          {/* Conctact Information */}\n          <div className='col-md-3 col-md-offset-1 contact-info'>\n            <div className='contact-item'>\n              <h3>Contact Information</h3>\n              <p>\n                <span>\n                  <i className='fa fa-map-marker'></i> Address\n                </span>\n                {props.data ? props.data.address : 'loading'}\n              </p>\n            </div>\n            <div className='contact-item'>\n              <p>\n                <span>\n                  <i className='fa fa-phone' ></i> Phone\n                </span>{' '}\n                {props.data ? props.data.phone : 'loading'}\n              </p>\n            </div>\n            <div className='contact-item'>\n              <p>\n                <span>\n                  <i className='fa fa-envelope-o'></i> Email\n                </span>{' '}\n                {props.data ? props.data.email : 'loading'}\n              </p>\n            </div>\n            <div className='contact-item'>\n              <p>\n                <span>\n                   Work with us\n                </span>{' '}\n                {props.data ? props.data.carrers : 'loading'}\n              </p>\n            </div>\n          </div>\n          <div className='col-md-12'>\n            <div className='row'>\n              <div className='social'>\n                <ul>\n                  <li>\n                    <a href={props.data ? props.data.linkedin : '/'} target=\"_blank\"><i className='fa fa-linkedin'></i></a>\n                   </li>\n                  <li>\n                    <a href={props.data ? props.data.instagram : '/'} target=\"_blank\"><i className='fa fa-instagram' ></i></a>\n                  </li>\n                </ul>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div id='footer'>\n        <div className='container text-center'>\n          <p>\n            &copy; 2021 BloY. All Rights Reserved.\n          </p>\n        </div>\n        {/* Whatsapp */}\n        <div>\n        <a href=\"https://wa.me/543548535757\" class=\"whatsapp_float\" target=\"_blank\"> <i class=\"fa fa-whatsapp whatsapp-icon\"></i></a>\n        </div>\n      </div>\n    </div>\n  )\n}\n","import { useState, useEffect } from 'react'\r\nimport { Navigation } from './components/navigation'\r\nimport { Header } from './components/header'\r\nimport { Features } from './components/features'\r\nimport { About } from './components/about'\r\nimport { Services } from './components/services'\r\nimport { Gallery } from './components/gallery'\r\nimport { Testimonials } from './components/testimonials'\r\nimport { Team } from './components/Team'\r\nimport { Contact } from './components/contact'\r\nimport JsonData from './data/data.json'\r\nimport SmoothScroll from 'smooth-scroll'\r\n// Google Analytics\r\nimport ReactGa from 'react-ga';\r\n\r\nexport const scroll = new SmoothScroll('a[href*=\"#\"]', {\r\n  speed: 1000,\r\n  speedAsDuration: true,\r\n})\r\n\r\nconst App = () => {\r\n  const [landingPageData, setLandingPageData] = useState({})\r\n  useEffect(() => {\r\n    setLandingPageData(JsonData)\r\n  }, [])\r\n    \r\n  // Google Analytics\r\n  useEffect(() => {\r\n    \r\n    ReactGa.initialize('UA-201476891-1');\r\n    \r\n    // To report page view\r\n    ReactGa.pageview('#');\r\n    ReactGa.pageview('#page-top');\r\n    ReactGa.pageview('#about');\r\n    ReactGa.pageview('#services');\r\n    ReactGa.pageview('#testimonials');\r\n    ReactGa.pageview('#team');\r\n    ReactGa.pageview('#contact');\r\n    \r\n  }, [])\r\n\r\n  return (\r\n    <div>\r\n      <Navigation />\r\n      <Header data={landingPageData.Header} />\r\n      {/* { <Features data={landingPageData.Features} /> } */}\r\n      <About data={landingPageData.About} />\r\n      <Services data={landingPageData.Services} />\r\n      {/* <Gallery /> */}\r\n      {/* <Testimonials data={landingPageData.Testimonials} /> */}\r\n      {/* <Team data={landingPageData.Team} /> */}\r\n      <Contact data={landingPageData.Contact} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}